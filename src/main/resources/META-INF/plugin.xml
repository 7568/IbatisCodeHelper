<idea-plugin version="2">
    <id>com.ccnode.codegenerator.IbatisCodeHelper</id>
    <name>IbatisCodeHelper</name>
    <version>1.1</version>
    <vendor email="gejun123456@gmail.com">IbatisCodeHelper</vendor>

    <description><![CDATA[
      <div>
      <p><a href="https://github.com/gejun123456/IbatisCodeHelper">GitHub</a>
      |&nbsp<a href="https://github.com/gejun123456/IbatisCodeHelper/issues">Issues</a></p>

      </ul>
      <p>Features</p>
      <ul>
      <li><p>Generate dao, service, sql and mybatis xml file according to domain class</p></li>
      <li><p>Generate mybatis sql based on mybatis interface method name</p></li>
      <li><p>Jump from mybatis dao interface to mapper xml each other</p></li>
      <li><p>generate files provide insert, insertList,update</p></li>
      <li><p>support refactor for mybatis interface method name</p></li>
      <li><p>Support java + MySQL and later will support more DB.</p></li>
      <li><a href="https://github.com/gejun123456/IbatisCodeHelper">https://github.com/gejun123456/IbatisCodeHelper</a> to learn more.</li>
      </ul>
      <p>How to use</p>
      <ul>
      <li>alt+insert (generate mybatis files) on domain class to generate mybatis files (ctrl+N on mac)</li>
      <li>alt+insert (generate mybatis files) on domain class to update mybatis files when domain class add field (ctrl+N on mac)</li>
      <li>alt+enter on dao interface method to generate mybatis mapper sql</li>
      <li>view more on <a href="https://github.com/gejun123456/IbatisCodeHelper">https://github.com/gejun123456/IbatisCodeHelper</a></li>
      </ul>

      <p>特性</p>
      <ul>
      <li><p>根据数据库对象一键生成Dao，Service，Xml，Sql文件</p></li>
      <li><p>根据mybatis接口中的方法名生成mybatis的sql</p></li>
      <li><p>mybatis接口文件的mapper xml之间的相互跳转</p></li>
      <li><p>数据库对象更新后一键更新对应的Sql和mybatis xml文件</p></li>
      <li><p>默认提供insert，insertList，update</p></li>
      <li><p>支持mybatis接口方法名的重构</p></li>
      </ul>
      <p>使用方法</p>
      <ul>
      <li><p>在数据库对象上使用alt+insert (generate mybatis files)来生成dao,mapper xml, service, sql (mac上使用ctrl+N)</p></li>
      <li><p>数据库对象添加字段后使用alt+insert (generate mybatis files) 来更新sql,mapper xml中的字段</p></li>
      <li><p>在mybatis接口的方法名上使用alt+enter来生成对应的mapper sql</p></li>
      <li><p>详细配置: <a href="https://github.com/gejun123456/IbatisCodeHelper">https://github.com/gejun123456/IbatisCodeHelper</a></p></li>
      </ul>
      </div>
    ]]></description>

    <change-notes><![CDATA[
     <p> 1.1 fix doc</p>
     <p>1.0 use gradle, fix bugs.</p>
    ]]>
    </change-notes>

    <actions>
        <group id="com.ccnode.codegenerator.IbatisCodeHelper" text="IbatisCodeHelper" description="IbatisCodeHelper" popup="true">
            <separator/>
            <group id="IbatisCodeHelperSubGroup"/>
            <add-to-group group-id="ToolsMenu" relative-to-action="GenerateJavadoc" anchor="before"/>

            <action id="IbatisCodeHelper.LearnMore" class="com.ccnode.codegenerator.view.ShowLearnMoreAction" text="Learn More"
                    description="Learn_More"/>
            <!--<action id="mybatis.enterLicense" class="com.ccnode.codegenerator.view.EnterLicenseAction" text="Register" description="License"/>-->

            <!--<action id="mybatis.generator" class="com.ccnode.codegenerator.view.GenCodeAction" text="genCode" description="A test menu item"/>-->
        </group>

        <group id="IbatisCodeHelpergeneratesqlgroup">
            <add-to-group group-id="GenerateGroup" relative-to-action="GenerateGetter" anchor="after"/>
            <action class="com.ccnode.codegenerator.view.GenCodeActionUsingAlt" id="IbatisCodeHelpergencodeusingalt"
                    text="generate mybatis files"
                    description="generate sql"/>
        </group>
        <!--<group id="com.ccnode.codegenerator.mybatis.generator" text="Gen" description="CodeGenerator">-->
        <!--<add-to-group group-id="TestActionSubGroup" />-->
        <!--<action id="mybatis.generator_1" class="com.ccnode.codegenerator.view.GenCodeAction" text="genCode1" description="A test menu item1"/>-->
        <!--<action id="mybatis.generator_2" class="com.ccnode.codegenerator.view.GenCodeAction" text="genCode2" description="A test menu item2"/>-->

        <!--</group>-->
    </actions>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="141.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <applicationService serviceInterface="com.ccnode.codegenerator.storage.SettingService"
                            serviceImplementation="com.ccnode.codegenerator.storage.SettingService"/>
        <codeInsight.lineMarkerProvider language="JAVA"
                                        implementationClass="com.ccnode.codegenerator.view.MybatisJavaLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.ccnode.codegenerator.view.MybatisXmlLineMarkerProvider"/>
        <completion.contributor language="JAVA"
                                implementationClass="com.ccnode.codegenerator.view.SqlCompletionContributor"/>

        <completion.contributor language="XML"
                                implementationClass="com.ccnode.codegenerator.view.MapperXmlCompletionContributor"/>

        <psi.referenceContributor
                implementation="com.ccnode.codegenerator.view.MyBatisJavaToXmlPsiReferenceContributor"/>


        <intentionAction>
            <className>com.ccnode.codegenerator.view.GenerateMethodXmlAction</className>
            <!--<category>Conditional Operator</category>-->
            <!--<descriptionDirectoryName>ConditionalOperatorConvertor</descriptionDirectoryName>-->
            <!--<bundleName>Generate daoxml</bundleName>-->
        </intentionAction>


        <!--<intentionAction>-->
        <!--<className>com.ccnode.codegenerator.view.GenerateDaoXmlFixAction</className>-->
        <!--<category>Conditional Operator</category>-->
        <!--<descriptionDirectoryName>ConditionalOperatorConvertor</descriptionDirectoryName>-->
        <!--</intentionAction>-->
    </extensions>

    <!--<project-components>-->
    <!--<component>-->
    <!--&lt;!&ndash;<implementation-class>com.intellij.codeInsight.intention.Condition</implementation-class>&ndash;&gt;-->
    <!--</component>-->
    <!--</project-components>-->

    <actions>
        <!-- Add your actions here -->
    </actions>

</idea-plugin>